version: '3.8'

services:
  publisher:
    image: andriiuni/events
    restart: always
    env_file:
      - .env
    depends_on:
      - gateway
    ports:
      - '8080:8080'

  postgres:
    image: postgres:10.21
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 'root'
      POSTGRES_DB: universe-group
      POSTGRES_USER: dev
      POSTGRES_PORT: 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  db-migrator:
    build:
      context: .
      dockerfile: ./services/ttk-collector/Dockerfile.dev
    command: npx prisma migrate deploy
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://dev:root@postgres:5432/universe-group
    volumes:
      - ./prisma:/app/prisma

  nats:
    image: nats
    container_name: nats
    restart: always
    command: -js -c /etc/nats/nats.conf
    ports:
      - '4222:4222'
    volumes:
      - ./config/nats/nats.conf:/etc/nats/nats.conf

  gateway:
    build:
      context: .
      dockerfile: ./services/gateway/Dockerfile.dev
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - nats
    volumes:
      - ./services/gateway:/app
      - ./services/gateway/node_modules:/app/node_modules

  ttk-collector:
    build:
      context: .
      dockerfile: ./services/ttk-collector/Dockerfile.dev
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - gateway
    volumes:
      - ./services/ttk-collector:/app
      - ./services/ttk-collector/node_modules:/app/node_modules
      - ./prisma:/app/prisma

  fb-collector:
    build:
      context: .
      dockerfile: ./services/fb-collector/Dockerfile.dev
    ports:
      - '3002:3002'
    env_file:
      - .env
    depends_on:
      - gateway
    volumes:
      - ./services/fb-collector:/app
      - ./services/fb-collector/node_modules:/app/node_modules
      - ./prisma:/app/prisma

  reporter:
    build:
      context: .
      dockerfile: ./services/reporter/Dockerfile.dev
    ports:
      - '3003:3003'
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./services/reporter:/app
      - ./services/reporter/node_modules:/app/node_modules
      - ./prisma:/app/prisma

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3005:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres-data:
    driver: local
  grafana-data:
    driver: local
  prometheus_data:
    driver: local
